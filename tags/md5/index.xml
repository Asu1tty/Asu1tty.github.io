<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MD5 on My New Hugo Site</title>
    <link>https://example.org/tags/md5/</link>
    <description>Recent content from My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    
    <managingEditor>unknow (Asu1tty)</managingEditor>
    <webMaster>unknow (Asu1tty)</webMaster>
    
    <copyright>All articles on this blog are licensed under the BY-NC-SA license agreement unless otherwise stated. Please indicate the source when reprinting!</copyright>
    
    <lastBuildDate>Wed, 23 Apr 2025 11:48:50 +0800</lastBuildDate>
    
    
    <atom:link href="https://example.org/tags/md5/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>MD5原理及代码实现</title>
      <link>https://example.org/post/md5/</link>
      <pubDate>Wed, 23 Apr 2025 11:48:50 &#43;0800</pubDate>
      <author>unknow (Asu1tty)</author>
      <guid>https://example.org/post/md5/</guid>
      <description>
        <![CDATA[<h1>MD5原理及代码实现</h1><p>Author: Asu1tty(unknow)</p>
        
          <p><strong>MD5消息摘要算法</strong>（英语：MD5 Message-Digest Algorithm），一种被广泛使用的<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A2%BC%E9%9B%9C%E6%B9%8A%E5%87%BD%E6%95%B8" title="密码散列函数">密码散列函数</a>，可以产生出一个128位（16个<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82" title="字节">字节</a>）的<a href="https://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97" title="散列">散列</a>值（hash value），用于确保资讯传输完整一致。
将<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE" title="数据">数据</a>（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。</p>
<h2 id="1-算法">
<a class="header-anchor" href="#1-%e7%ae%97%e6%b3%95"></a>
1. 算法
</h2><p>MD5是输入不定长度，输出固定长度128-bits的算法。经过程序流程，生成四个32位数据，最后联合起来成为一个128-bits（16字节，通常消息传输中更常见表示为32 个十六进制字符）<a href="https://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97" title="散列">散列</a>。</p>
<h2 id="2-算法实现过程">
<a class="header-anchor" href="#2-%e7%ae%97%e6%b3%95%e5%ae%9e%e7%8e%b0%e8%bf%87%e7%a8%8b"></a>
2. 算法实现过程
</h2><h3 id="21-第一步填充">
<a class="header-anchor" href="#21-%e7%ac%ac%e4%b8%80%e6%ad%a5%e5%a1%ab%e5%85%85"></a>
2.1. 第一步：填充
</h3><p>MD5 的输入数据需要满足以下条件：</p>
<ul>
<li>数据长度（以位为单位）模 512 等于 448（即模 64 字节等于 56 字节）。</li>
<li>填充后，数据长度必须是 512 位的倍数（即 64 字节的倍数）。</li>
</ul>
<p>以字符串<code>admin</code>为例，十六进制如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">61 64 6D 69 6E
</span></span></code></pre></div><p>首先需要填充到64字节
第一位填充 0x80 剩下的填充 0 直到达到 56 个字节</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">61 64 6D 69 6E 80 0(填充50次) 共 56 个字节
</span></span></code></pre></div><p>接下来 8 个字节
第一位填充消息长度 * 8，也就是5 * 8 = 40 = 0x28，（0x28 &amp; 0xFF）剩下的填充0</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">61 64 6D 69 6E 80 0(填充50次) 0x28 0(填充7次) 共 64 个字节
</span></span></code></pre></div><h4 id="211-当输入大小恰好为56字节时">
<a class="header-anchor" href="#211-%e5%bd%93%e8%be%93%e5%85%a5%e5%a4%a7%e5%b0%8f%e6%81%b0%e5%a5%bd%e4%b8%ba56%e5%ad%97%e8%8a%82%e6%97%b6"></a>
2.1.1. 当输入大小恰好为56字节时
</h4><p>理论上，只需添加 0x80 和长度信息即可，但由于 0x80 占用 1 字节，剩余空间不足以容纳 8 字节的长度信息，因此需要填充到下一个 512 位块。</p>
        
        <hr><p>Published on 2025-04-23 at <a href='https://example.org/'>My New Hugo Site</a>, last modified on 2025-04-23</p>]]>
      </description>
      
        <category>Crypto</category>
      
    </item>
    
  </channel>
</rss>
