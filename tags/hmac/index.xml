<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HMAC on Asu1tty&#39;s Blog</title>
    <link>https://asu1tty.github.io/tags/hmac/</link>
    <description>Recent content from Asu1tty&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    
    <managingEditor>unknow (Asu1tty)</managingEditor>
    <webMaster>unknow (Asu1tty)</webMaster>
    
    <copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright>
    
    <lastBuildDate>Thu, 24 Apr 2025 11:45:36 +0800</lastBuildDate>
    
    
    <atom:link href="https://asu1tty.github.io/tags/hmac/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>HMAC原理及代码实现</title>
      <link>https://asu1tty.github.io/post/mhac/</link>
      <pubDate>Thu, 24 Apr 2025 11:45:36 &#43;0800</pubDate>
      <author>unknow (Asu1tty)</author>
      <guid>https://asu1tty.github.io/post/mhac/</guid>
      <description>
        <![CDATA[<h1>HMAC原理及代码实现</h1><p>作者：Asu1tty（unknow）</p>
        
          <p>HMAC（Hash-based Message Authentication Code，<a href="https://so.csdn.net/so/search?q=%E6%95%A3%E5%88%97&amp;spm=1001.2101.3001.7020">散列</a>消息认证码）是一种使用密码散列函数，同时结合一个加密密钥，通过特别计算方式之后产生的消息认证码（MAC）。
HMAC算法利用哈希运算，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。
hmac算法通常需要以一个hash函数为载体,比如常见的有hmacMd5,hmacSha1,hmacSha256,目前在so里只见到过hmacMd5,hmacSha256,但是hmac的规则是适用所有hash函数的</p>
        
        <hr><p>本文2025-04-24首发于<a href='https://asu1tty.github.io/'>Asu1tty's Blog</a>，最后修改于2025-04-24</p>]]>
      </description>
      
        <category>Crypto</category>
      
    </item>
    
  </channel>
</rss>
