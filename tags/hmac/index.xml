<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HMAC on My New Hugo Site</title>
    <link>https://example.org/tags/hmac/</link>
    <description>Recent content from My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    
    <managingEditor>unknow (Asu1tty)</managingEditor>
    <webMaster>unknow (Asu1tty)</webMaster>
    
    <copyright>All articles on this blog are licensed under the BY-NC-SA license agreement unless otherwise stated. Please indicate the source when reprinting!</copyright>
    
    <lastBuildDate>Thu, 24 Apr 2025 11:45:36 +0800</lastBuildDate>
    
    
    <atom:link href="https://example.org/tags/hmac/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>HMAC原理及代码实现</title>
      <link>https://example.org/post/mhac/</link>
      <pubDate>Thu, 24 Apr 2025 11:45:36 &#43;0800</pubDate>
      <author>unknow (Asu1tty)</author>
      <guid>https://example.org/post/mhac/</guid>
      <description>
        <![CDATA[<h1>HMAC原理及代码实现</h1><p>Author: Asu1tty(unknow)</p>
        
          <p>HMAC（Hash-based Message Authentication Code，<a href="https://so.csdn.net/so/search?q=%E6%95%A3%E5%88%97&amp;spm=1001.2101.3001.7020">散列</a>消息认证码）是一种使用密码散列函数，同时结合一个加密密钥，通过特别计算方式之后产生的消息认证码（MAC）。
HMAC算法利用哈希运算，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。
hmac算法通常需要以一个hash函数为载体,比如常见的有hmacMd5,hmacSha1,hmacSha256,目前在so里只见到过hmacMd5,hmacSha256,但是hmac的规则是适用所有hash函数的</p>
<p>HMAC算法的数学公式为：
<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fb67423fa152e335f482c2a885c9f2bbed812e81" alt="{\displaystyle {\textit {HMAC}}(K,m)=H{\Bigl (}(K’\oplus opad)\;||\;H{\bigl (}(K’\oplus ipad)\;||\;m{\bigr )}{\Bigr )}}">
其中：</p>
<p><strong>H</strong> 为密码Hash函数（如MD5或SHA-2)，能够对明文进行分组循环压缩；</p>
<p><strong>K</strong> 为密钥（secret key）；</p>
<p><strong>m</strong> 为要认证的消息；</p>
<p><strong>K’</strong> 是从原始密钥 k 导出的另一个密钥（如果 k 短于散列函数的输入块大小，则向右填充零；如果比该块大小更长，则对 k 进行散列）；</p>
<p><strong>ipad</strong> 内部填充（0x5C5C5C…5C5C，一段十六进制常量）；</p>
<p><strong>opad</strong> 外部填充（0x363636…3636，一段十六进制常量)；</p>
<p><strong>⊕</strong>：按位异或运算。</p>
<p><strong>||</strong>：字符串拼接。</p>
<p>总结8个字就是:<strong>两次加盐,两次hash</strong>。</p>
<h2 id="1-算法实现过程">
<a class="header-anchor" href="#1-%e7%ae%97%e6%b3%95%e5%ae%9e%e7%8e%b0%e8%bf%87%e7%a8%8b"></a>
1. 算法实现过程
</h2><p>HMAC需要选择一个哈希函数作为实现的载体，这里以MD5为例</p>
<h3 id="11-第一步扩展密钥">
<a class="header-anchor" href="#11-%e7%ac%ac%e4%b8%80%e6%ad%a5%e6%89%a9%e5%b1%95%e5%af%86%e9%92%a5"></a>
1.1. 第一步：扩展密钥
</h3><p>以字符串<code>admin</code>为例，十六进制如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">61 64 6D 69 6E
</span></span></code></pre></div><p>填充密钥到64字节</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">61 64 6D 69 6E 00(填充59次)
</span></span></code></pre></div><h3 id="12-异或0x36">
<a class="header-anchor" href="#12-%e5%bc%82%e6%88%960x36"></a>
1.2. 异或0x36
</h3><p>将密钥逐字节异或0x36，得到<strong>扩展密钥1</strong>，0x36十进制是54</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">57 52 5b 5f 58 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36
</span></span></code></pre></div><h3 id="13-异或0x5c">
<a class="header-anchor" href="#13-%e5%bc%82%e6%88%960x5c"></a>
1.3. 异或0x5C
</h3><p>将密钥逐字节异或0x5c，得到<strong>扩展密钥2</strong>，0x5C十进制是92</p>
        
        <hr><p>Published on 2025-04-24 at <a href='https://example.org/'>My New Hugo Site</a>, last modified on 2025-04-24</p>]]>
      </description>
      
        <category>Crypto</category>
      
    </item>
    
  </channel>
</rss>
