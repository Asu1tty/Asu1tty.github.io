<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ELF on Asu1tty&#39;s Blog</title>
    <link>https://asu1tty.github.io/tags/elf/</link>
    <description>Recent content from Asu1tty&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    
    <managingEditor>unknow (Asu1tty)</managingEditor>
    <webMaster>unknow (Asu1tty)</webMaster>
    
    <copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright>
    
    <lastBuildDate>Sat, 17 May 2025 11:18:36 +0800</lastBuildDate>
    
    
    <atom:link href="https://asu1tty.github.io/tags/elf/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>浅析So加固的三种方式</title>
      <link>https://asu1tty.github.io/post/so-harden/</link>
      <pubDate>Sat, 17 May 2025 11:18:36 &#43;0800</pubDate>
      <author>unknow (Asu1tty)</author>
      <guid>https://asu1tty.github.io/post/so-harden/</guid>
      <description>
        <![CDATA[<h1>浅析So加固的三种方式</h1><p>作者：Asu1tty（unknow）</p>
        
          <p>简单分享一下so加固的方案。本文章的代码基于<a href="https://bbs.kanxue.com/thread-285650.htm">关于SO加密对抗的两种实现方式</a>
在看本篇文章之前，最好需要了解一下ELF文件格式，以及So的加载流程，这里推荐oacia大佬的两篇文章。<a href="https://oacia.dev/ElfReader/">ELF结构分析及ElfReader</a>和<a href="https://oacia.dev/android-load-so/">安卓so加载流程源码分析</a>。</p>
        
        <hr><p>本文2025-05-17首发于<a href='https://asu1tty.github.io/'>Asu1tty's Blog</a>，最后修改于2025-05-17</p>]]>
      </description>
      
    </item>
    
    

    <item>
      <title>ELF结构及加载流程分析</title>
      <link>https://asu1tty.github.io/post/elfreader/</link>
      <pubDate>Wed, 30 Apr 2025 11:18:36 &#43;0800</pubDate>
      <author>unknow (Asu1tty)</author>
      <guid>https://asu1tty.github.io/post/elfreader/</guid>
      <description>
        <![CDATA[<h1>ELF结构及加载流程分析</h1><p>作者：Asu1tty（unknow）</p>
        
          <ul>
<li>
<ul>
<li>
<p>目前，PC平台流行的 <strong>可执行文件格式（Executable）</strong> 主要包含如下两种：</p>
<ul>
<li>Windows下的 <strong>PE（Portable Executable）</strong></li>
<li>Linux下的 <strong>ELF（Executable Linkable Format）</strong></li>
</ul>
<p>ELF（Executable and Linkable Format，可执行和可链接格式）是Linux系统中广泛使用的文件格式，用于存储可执行文件、目标代码、共享库和核心转储（core dump）。它是一种灵活、通用的格式，支持多种处理器架构和操作系统，具有跨平台特性。</p>
        
        <hr><p>本文2025-04-30首发于<a href='https://asu1tty.github.io/'>Asu1tty's Blog</a>，最后修改于2025-04-30</p>]]>
      </description>
      
    </item>
    
  </channel>
</rss>
