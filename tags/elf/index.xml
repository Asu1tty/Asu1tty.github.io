<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ELF on My New Hugo Site</title>
    <link>https://asu1tty.github.io/tags/elf/</link>
    <description>Recent content in ELF on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Apr 2025 11:18:36 +0800</lastBuildDate>
    <atom:link href="https://asu1tty.github.io/tags/elf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ELF结构及加载流程分析</title>
      <link>https://asu1tty.github.io/post/elfreader/</link>
      <pubDate>Wed, 30 Apr 2025 11:18:36 +0800</pubDate>
      <guid>https://asu1tty.github.io/post/elfreader/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;目前，PC平台流行的 &lt;strong&gt;可执行文件格式（Executable）&lt;/strong&gt; 主要包含如下两种：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows下的 &lt;strong&gt;PE（Portable Executable）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Linux下的 &lt;strong&gt;ELF（Executable Linkable Format）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ELF（Executable and Linkable Format，可执行和可链接格式）是Linux系统中广泛使用的文件格式，用于存储可执行文件、目标代码、共享库和核心转储（core dump）。它是一种灵活、通用的格式，支持多种处理器架构和操作系统，具有跨平台特性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;主要特点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;：ELF支持多种处理器架构（如x86、x86_64、ARM、MIPS）和字节序（大端/小端）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：分为多个段（Section）和节（Segment），便于解析和操作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;支持动态链接&lt;/strong&gt;：允许在运行时加载共享库，减少内存占用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;：支持添加自定义段，适应不同需求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ELF文件可以是以下几种类型：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;可执行文件&lt;/strong&gt;（Executable File）：如编译后的程序，直接运行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;目标文件&lt;/strong&gt;（Object File）：编译器生成的中间文件，通常用于链接生成可执行文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共享库&lt;/strong&gt;（Shared Library）：动态链接库，运行时加载（如.so文件）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;核心转储&lt;/strong&gt;（Core Dump）：程序崩溃时保存的内存快照，用于调试。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;1-elf主要结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1-elf%e4%b8%bb%e8%a6%81%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;1. ELF主要结构&#xA;&lt;/h2&gt;&lt;p&gt;ELF 文件主要分为 3 个部分:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ELF Header  ELF文件头&lt;/strong&gt;，位于ELF文件的开头，描述文件的整体信息。它的大小通常为32位系统中的52字节或64位系统中的64字节。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Program Header Table  程序头表&lt;/strong&gt;  ，描述了文件中的&lt;strong&gt;段&lt;/strong&gt;（Segment），主要用于运行时加载和执行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Section Header Table  节头表&lt;/strong&gt;  ，描述了文件中的&lt;strong&gt;节&lt;/strong&gt;（Section），主要用于链接和调试。每个节包含特定类型的数据（如代码、数据、符号表等）。节头表对于可执行文件是可选的，但在目标文件中通常存在。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11-elf-header--elf文件头&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#11-elf-header--elf%e6%96%87%e4%bb%b6%e5%a4%b4&#34;&gt;&lt;/a&gt;&#xA;1.1. ELF Header  ELF文件头&#xA;&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//https://github.com/bminor/glibc/blob/glibc-2.27/elf/elf.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_ident&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EI_NIDENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Magic number and other info */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Object file type */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_machine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Architecture */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Word&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Object file version */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Addr&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Entry point virtual address */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Off&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_phoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Program header table file offset */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Off&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_shoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Section header table file offset */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Word&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Processor-specific flags */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_ehsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* ELF header size in bytes */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_phentsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Program header table entry size */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_phnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Program header table entry count */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_shentsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Section header table entry size */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_shnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Section header table entry count */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Elf32_Half&lt;/span&gt;&#x9;&lt;span class=&#34;n&#34;&gt;e_shstrndx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;cm&#34;&gt;/* Section header string table index */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Elf32_Ehdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;111-e_identei_nident&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#111-e_identei_nident&#34;&gt;&lt;/a&gt;&#xA;1.1.1. e_ident[EI_NIDENT]&#xA;&lt;/h4&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;宏名称&lt;/th&gt;&#xA;          &lt;th&gt;下标&lt;/th&gt;&#xA;          &lt;th&gt;目的&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_MAG0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;文件标识&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_MAG1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;文件标识&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_MAG2&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;文件标识&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_MAG3&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;文件标识&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_CLASS&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;文件类&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_DATA&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;数据编码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_VERSION&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;文件版本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;EI_PAD&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;补齐字节开始处&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;112-e_identei_mag0ei_mag3&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#112-e_identei_mag0ei_mag3&#34;&gt;&lt;/a&gt;&#xA;1.1.2. e_ident[EI_MAG0…EI_MAG3]&#xA;&lt;/h4&gt;&lt;p&gt;这是 ELF 文件的头 4 个字节，被称作 “魔数”，标识该文件是一个 ELF 目标文件。&#xA;ELF文件的魔数为0x7f, &amp;lsquo;E&amp;rsquo;, &amp;lsquo;L&amp;rsquo;, &amp;lsquo;F&amp;rsquo;，即字节序列7F 45 4C 46。&#xA;0x7f被选为第一个字节，部分原因是它在ASCII编码中对应&lt;strong&gt;DEL控制字符&lt;/strong&gt;，这是一个非打印字符，不太可能出现在文本文件或其他文件格式的开头，从而降低了误识别的风险。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
